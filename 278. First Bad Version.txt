class Solution {
public:
    int firstBadVersion(int n) {
        int lower = 1, upper = n, mid;
        while(lower < upper) {
            mid = lower + (upper - lower) / 2;
            if(!isBadVersion(mid)) lower = mid + 1;   /* Only one call to API */
            else upper = mid;
        }
        return lower;   /* Because there will alway be a bad version, return lower here */
    }
};

class Solution {
public:
    int firstBadVersion(int n) {
        int i=1,mid,ans;
        
        if(n==1)return 1;
        
        while(i<=n){
            mid= i+(n-i)/2;
            if(isBadVersion(mid)==true){
                ans=mid;
                n=mid-1;
            }
            else{
                i=mid+1;
            }
        }
        
        return ans;
    }
};